<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BookmarksString" xml:space="preserve">
    <value>Signets</value>
  </data>
  <data name="ByteActionString" xml:space="preserve">
    <value>Action sur l'octet</value>
  </data>
  <data name="ByteString" xml:space="preserve">
    <value>Octets</value>
  </data>
  <data name="CancelLongProcessString" xml:space="preserve">
    <value>Annuler le long processus</value>
  </data>
  <data name="CancelLongProcessToolTipString" xml:space="preserve">
    <value>Cliquez pour annuler le processus long.</value>
  </data>
  <data name="CancelString" xml:space="preserve">
    <value>Annuler</value>
  </data>
  <data name="ClearBookMarkString" xml:space="preserve">
    <value>Supprimer les signets</value>
  </data>
  <data name="ClickToGoAtPositionString" xml:space="preserve">
    <value>Cliquez pour aller à la position.</value>
  </data>
  <data name="CopyAsASCIIString" xml:space="preserve">
    <value>Copie en ASCII</value>
  </data>
  <data name="CopyAsDecimalString" xml:space="preserve">
    <value>Copier la valeur décimal</value>
  </data>
  <data name="CopyAsHexadecimalString" xml:space="preserve">
    <value>Copie en hexadecimal</value>
  </data>
  <data name="CopyAsTBLString" xml:space="preserve">
    <value>Chaîne TBL (fichier de caractères chargé)</value>
  </data>
  <data name="CopySelectionAsString" xml:space="preserve">
    <value>Copier la selection en ...</value>
  </data>
  <data name="CountOfString" xml:space="preserve">
    <value>Quantiter de </value>
  </data>
  <data name="DefaultTBLString" xml:space="preserve">
    <value>TBL par défaut</value>
  </data>
  <data name="DeleteString" xml:space="preserve">
    <value>Supprimer</value>
  </data>
  <data name="DescriptionString" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="EndTagString" xml:space="preserve">
    <value>&lt;Fin&gt;</value>
  </data>
  <data name="EnterHexValueMsgString" xml:space="preserve">
    <value>Entrer une valeur hexadecimal ...</value>
  </data>
  <data name="FillSelectionString" xml:space="preserve">
    <value>Remplir la sélection avec l'octet ...</value>
  </data>
  <data name="FindByteString" xml:space="preserve">
    <value>Octet à rechercher</value>
  </data>
  <data name="FindSelectionString" xml:space="preserve">
    <value>Trouver toutes les occurrences de la sélection</value>
  </data>
  <data name="FirstByteString" xml:space="preserve">
    <value>Premier octet</value>
  </data>
  <data name="HexString" xml:space="preserve">
    <value>Hex</value>
  </data>
  <data name="KBTagString" xml:space="preserve">
    <value>Ko</value>
  </data>
  <data name="LengthString" xml:space="preserve">
    <value>Taille</value>
  </data>
  <data name="LineStatusBarTagString" xml:space="preserve">
    <value>Lg</value>
  </data>
  <data name="LineTagString" xml:space="preserve">
    <value>&lt;lg&gt;</value>
  </data>
  <data name="LongString" xml:space="preserve">
    <value>Long</value>
  </data>
  <data name="MBTagString" xml:space="preserve">
    <value>Mo</value>
  </data>
  <data name="OkString" xml:space="preserve">
    <value>Ok</value>
  </data>
  <data name="PasteNotInsertString" xml:space="preserve">
    <value>Coller sans insérer</value>
  </data>
  <data name="PositionString" xml:space="preserve">
    <value>Position</value>
  </data>
  <data name="ReplaceByByteString" xml:space="preserve">
    <value>Remplacer par l'octet</value>
  </data>
  <data name="ReplaceSelectionString" xml:space="preserve">
    <value>Remplacer un octet dans la sélection ...</value>
  </data>
  <data name="SelectAllString" xml:space="preserve">
    <value>Selectionner tout</value>
  </data>
  <data name="SetBookMarkString" xml:space="preserve">
    <value>Définir un signet</value>
  </data>
  <data name="TBLString" xml:space="preserve">
    <value>TBL</value>
  </data>
  <data name="ThisStringAreNotHexString" xml:space="preserve">
    <value>Cette chaine n'est pas hexadecimal</value>
  </data>
  <data name="ValueString" xml:space="preserve">
    <value>Valeur</value>
  </data>
  <data name="WritingErrorExeptionString" xml:space="preserve">
    <value>Une erreur est survenue lors de l'écriture.</value>
  </data>
  <data name="UndoString" xml:space="preserve">
    <value>Annuler</value>
  </data>
  <data name="AppendByteConfirmationString" xml:space="preserve">
    <value>Vous avez atteint la fin du fichier. Voulez-vous ajouter un octet? Cette opération ne peut pas être annulée si vous continuez.</value>
  </data>
  <data name="FillSelectionAloneString" xml:space="preserve">
    <value>Remplir la sélection avec un octet</value>
  </data>
  <data name="PasteFromClipboardString" xml:space="preserve">
    <value>Coller du presse-papiers</value>
  </data>
  <data name="ReplaceWithByteString" xml:space="preserve">
    <value>Remplacer un octet</value>
  </data>
  <data name="FileDroppingConfirmationString" xml:space="preserve">
    <value>Voulez-vous fermer le fichier actuel et ouvrir : </value>
  </data>
  <data name="PasteExtendByteConfirmationString" xml:space="preserve">
    <value>L'opération de collage a atteint la fin du fichier. Voulez-vous étendre le fichier pour une opération complète? Cette opération ne peut pas être annulée si vous continuez.</value>
  </data>
  <data name="ClearString" xml:space="preserve">
    <value>Effacer</value>
  </data>
  <data name="CloseString" xml:space="preserve">
    <value>Fermer</value>
  </data>
  <data name="FindAllString" xml:space="preserve">
    <value>Tout</value>
  </data>
  <data name="FindAndReplaceString" xml:space="preserve">
    <value>Rechercher et Remplacer</value>
  </data>
  <data name="FindFirstString" xml:space="preserve">
    <value>Rechercher</value>
  </data>
  <data name="FindLastString" xml:space="preserve">
    <value>Dernier</value>
  </data>
  <data name="FindNextString" xml:space="preserve">
    <value>Suivant</value>
  </data>
  <data name="FindString" xml:space="preserve">
    <value>Rechercher</value>
  </data>
  <data name="FindWhatString" xml:space="preserve">
    <value>Rechercher quoi:</value>
  </data>
  <data name="ReplaceAllString" xml:space="preserve">
    <value>Remplacer tout</value>
  </data>
  <data name="ReplaceNextString" xml:space="preserve">
    <value>Remplacer suivant</value>
  </data>
  <data name="ReplaceString" xml:space="preserve">
    <value>Remplacer</value>
  </data>
  <data name="ReplaceWithString" xml:space="preserve">
    <value>Remplacer par :</value>
  </data>
  <data name="HighLightSettingString" xml:space="preserve">
    <value>Mettez en surbrillance toutes les données trouvées</value>
  </data>
  <data name="ReplaceTrimSettingString" xml:space="preserve">
    <value>Couper les données sur la longueur de la recherche lors du remplacement</value>
  </data>
  <data name="ZoomResetString" xml:space="preserve">
    <value>Réinitialiser le zoom à 100%</value>
  </data>
  <data name="ZoomString" xml:space="preserve">
    <value>Zoom</value>
  </data>
</root>