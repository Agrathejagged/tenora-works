<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AppendByteConfirmationString" xml:space="preserve">
    <value>Osiągnąłeś koniec pliku. Czy chcesz dołączyć jeden bajt? Ta operacja nie może zostać anulowana, jeśli kontynuujesz.</value>
  </data>
  <data name="BookmarksString" xml:space="preserve">
    <value>Zakładki</value>
  </data>
  <data name="ByteActionString" xml:space="preserve">
    <value>Byte action</value>
  </data>
  <data name="ByteString" xml:space="preserve">
    <value>Bajt</value>
  </data>
  <data name="CancelLongProcessString" xml:space="preserve">
    <value>Anuluj długi proces</value>
  </data>
  <data name="CancelLongProcessToolTipString" xml:space="preserve">
    <value>Kliknij, aby anulować długi proces.</value>
  </data>
  <data name="CancelString" xml:space="preserve">
    <value>Anuluj</value>
  </data>
  <data name="ClearBookMarkString" xml:space="preserve">
    <value>Wyczyść zakładki</value>
  </data>
  <data name="ClearString" xml:space="preserve">
    <value>Clear</value>
  </data>
  <data name="ClickToGoAtPositionString" xml:space="preserve">
    <value>Kliknij, aby przejść do pozycji.</value>
  </data>
  <data name="CloseString" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="CopyAsASCIIString" xml:space="preserve">
    <value>Skopiuj jako ASCII</value>
  </data>
  <data name="CopyAsDecimalString" xml:space="preserve">
    <value>Kopiuj jako dziesiętny</value>
  </data>
  <data name="CopyAsHexadecimalString" xml:space="preserve">
    <value>Skopiuj jako szesnastkowy</value>
  </data>
  <data name="CopyAsTBLString" xml:space="preserve">
    <value>Ciąg TBL (plik z załadowanymi znakami)</value>
  </data>
  <data name="CopySelectionAsString" xml:space="preserve">
    <value>Skopiuj zaznaczenie jako ...</value>
  </data>
  <data name="CountOfString" xml:space="preserve">
    <value>Liczyć</value>
  </data>
  <data name="DefaultTBLString" xml:space="preserve">
    <value>Domyślny TBL</value>
  </data>
  <data name="DeleteString" xml:space="preserve">
    <value>Kasować</value>
  </data>
  <data name="DescriptionString" xml:space="preserve">
    <value>Opis</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="EBCDIC" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\EBCDIC.tbl;System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089;us-ascii</value>
  </data>
  <data name="EBCDICNoSpecialChar" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\EBCDIC-NoSpecialChar.tbl;System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089;Windows-1252</value>
  </data>
  <data name="EndTagString" xml:space="preserve">
    <value>&lt;end&gt;</value>
  </data>
  <data name="EnterHexValueMsgString" xml:space="preserve">
    <value>Wprowadź wartość szesnastkową ...</value>
  </data>
  <data name="FileDroppingConfirmationString" xml:space="preserve">
    <value>Czy chcesz zamknąć bieżący plik i otworzyć:</value>
  </data>
  <data name="FillSelectionAloneString" xml:space="preserve">
    <value>Wypełnij wybór bajtem</value>
  </data>
  <data name="FillSelectionString" xml:space="preserve">
    <value>Wypełnij bajt wyboru ...</value>
  </data>
  <data name="FindAllString" xml:space="preserve">
    <value>Znajdź wszystko</value>
  </data>
  <data name="FindAndReplaceString" xml:space="preserve">
    <value>Znajdź i zamień</value>
  </data>
  <data name="FindByteString" xml:space="preserve">
    <value>Byte to search</value>
  </data>
  <data name="FindFirstString" xml:space="preserve">
    <value>Znajdź pierwszy</value>
  </data>
  <data name="FindLastString" xml:space="preserve">
    <value>Znajdź ostatni</value>
  </data>
  <data name="FindNextString" xml:space="preserve">
    <value>Znajdź następny</value>
  </data>
  <data name="FindSelectionString" xml:space="preserve">
    <value>Znajdź wszystkie wystąpienia zaznaczenia</value>
  </data>
  <data name="FindString" xml:space="preserve">
    <value>Odnaleźć</value>
  </data>
  <data name="FindWhatString" xml:space="preserve">
    <value>Znajdź co:</value>
  </data>
  <data name="FirstByteString" xml:space="preserve">
    <value>Pierwszy bajt</value>
  </data>
  <data name="HexString" xml:space="preserve">
    <value>Hex</value>
  </data>
  <data name="HighLightSettingString" xml:space="preserve">
    <value>Zaznacz wszystkie znalezione dane</value>
  </data>
  <data name="KBTagString" xml:space="preserve">
    <value>Kb</value>
  </data>
  <data name="LengthString" xml:space="preserve">
    <value>Długość</value>
  </data>
  <data name="LineStatusBarTagString" xml:space="preserve">
    <value>Ln</value>
  </data>
  <data name="LineTagString" xml:space="preserve">
    <value>&lt;ln&gt;</value>
  </data>
  <data name="LongString" xml:space="preserve">
    <value>Długie</value>
  </data>
  <data name="MBTagString" xml:space="preserve">
    <value>Mb</value>
  </data>
  <data name="OkString" xml:space="preserve">
    <value>Ok</value>
  </data>
  <data name="PasteExtendByteConfirmationString" xml:space="preserve">
    <value>Wklej dotarł do końca pliku. Czy chcesz przedłużyć plik do pełnej pracy? Ta operacja nie może zostać anulowana, jeśli kontynuujesz.</value>
  </data>
  <data name="PasteFromClipboardString" xml:space="preserve">
    <value>Wklej ze schowka</value>
  </data>
  <data name="PasteNotInsertString" xml:space="preserve">
    <value>Wklej bez wstawiania</value>
  </data>
  <data name="PositionString" xml:space="preserve">
    <value>Pozycja</value>
  </data>
  <data name="ReplaceAllString" xml:space="preserve">
    <value>Zmień wszystko</value>
  </data>
  <data name="ReplaceByByteString" xml:space="preserve">
    <value>Wymień bajt</value>
  </data>
  <data name="ReplaceNextString" xml:space="preserve">
    <value>Zamień na następny</value>
  </data>
  <data name="ReplaceSelectionString" xml:space="preserve">
    <value>Zastąp bajt w zaznaczeniu ...</value>
  </data>
  <data name="ReplaceString" xml:space="preserve">
    <value>Zastąpić</value>
  </data>
  <data name="ReplaceTrimSettingString" xml:space="preserve">
    <value>Przytnij dane na długości wyszukiwania po wymianie</value>
  </data>
  <data name="ReplaceWithByteString" xml:space="preserve">
    <value>Zmień na bajt</value>
  </data>
  <data name="ReplaceWithString" xml:space="preserve">
    <value>zastąpić:</value>
  </data>
  <data name="SelectAllString" xml:space="preserve">
    <value>Zaznacz wszystko</value>
  </data>
  <data name="SetBookMarkString" xml:space="preserve">
    <value>Ustaw zakładkę</value>
  </data>
  <data name="TBLString" xml:space="preserve">
    <value>TBL</value>
  </data>
  <data name="ThisStringAreNotHexString" xml:space="preserve">
    <value>Ten ciąg nie jest szesnastkowy</value>
  </data>
  <data name="UndoString" xml:space="preserve">
    <value>Cofnij</value>
  </data>
  <data name="ValueString" xml:space="preserve">
    <value>Wartość</value>
  </data>
  <data name="WritingErrorExeptionString" xml:space="preserve">
    <value>Wystąpił błąd podczas pisania.</value>
  </data>
  <data name="ZoomResetString" xml:space="preserve">
    <value>Zresetuj zoom do 100%</value>
  </data>
  <data name="ZoomString" xml:space="preserve">
    <value>Powiększenie</value>
  </data>
</root>